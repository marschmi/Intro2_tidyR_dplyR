head(tb)
install.packages("devtools")
devtools::install_github("rstudio/EDAWR")
library(EDAWR)
head(storms)
head(storms, n= 3)
?storms
?tb
?storms
?pollution
dim(storms)
dim(tb)
tb
View(tb)
?cases
head(cases, head = 4)
head(religion) # particulate load from 3 cities
head(pew)
install.packages("efficient")
library(pew)
devtools::install_github("csgillespie/efficient")
library(pew)
library(efficient)
devtools::install_github("csgillespie/efficient", build_vignettes = TRUE)
devtools::install_github("csgillespie/efficient", build_vignettes = TRUE, force = TRUE)
buildVignettes
devtools::install_github("csgillespie/efficient"
)
library(efficient)
browseVignettes(package = "efficient")
head(pew)
library(efficient)
View(pew)
head(cases) # TB cases from 3 countries
head(cases) # TB cases from 3 countries
head(storms, n = 5)
gather(cases, "year", "n", 2:4)
library(tidyr) # Let's organize our data!
library(dplyr) # Let's manipulate our data!
gather(cases, "year", "n", 2:4)
head(pollution) # particulate load from 3 cities
head(pollution) # particulate load from 3 cities
head(cases, n = 2)
pollution %>%                # The data we are using
spread("size", "amount")   # Spread the data to 2 new columns called size and amount
pollution %>%                   # Dataframe in use
spread("size", "amount") %>%  # Spread the data into columns: size and amount
ggplot(x = city, y = large) + geom_point()
library(ggplot2)
pollution %>%                   # Dataframe in use
spread("size", "amount") %>%  # Spread the data into columns: size and amount
ggplot(x = city, y = large) + geom_point()
pollution %>%                   # Dataframe in use
spread("size", "amount") %>%  # Spread the data into columns: size and amount
ggplot(aes(x = city, y = large)) + geom_point()
gather(cases, "year", "n", 2:4)
ggplot(aes(x = year, y = n, color = country)) +
geom_point()
cases %>%                       # Dataframe in use
gather("year", "n", 2:4) %>%  # Spread the data into columns: size and amount
ggplot(aes(x = year, y = n, color = country)) +
geom_point()
cases %>%                       # Dataframe in use
gather("year", "n", 2:4) %>%  # Spread the data into columns: size and amount
ggplot(aes(x = year, y = n, color = country)) +
geom_point() + theme_cowplot
cases %>%                       # Dataframe in use
gather("year", "n", 2:4) %>%  # Spread the data into columns: size and amount
ggplot(aes(x = year, y = n, color = country)) +
geom_point() + theme_bw()
cases %>%                       # Dataframe in use
gather("year", "n", 2:4) %>%  # Spread the data into columns: size and amount
ggplot(aes(x = country, y = n, color = year)) +
geom_point() + theme_bw()
cases %>%                       # Dataframe in use
gather("year", "n", 2:4) %>%  # Spread the data into columns: size and amount
ggplot(aes(x = country, y = n, color = country)) +     # Plot the data
geom_boxplot() + theme_bw()
cases %>%                       # Dataframe in use
gather("year", "n", 2:4) %>%  # Spread the data into columns: size and amount
ggplot(aes(x = country, y = n, color = country, fill = country)) +     # Plot the data
geom_boxplot(alpha = 0.5) + theme_bw()
?cases
# Pander table
install.packages("pander") # install pander first
library(pander)
pander(head(mtcars, n = 4))
install.packages("knitr")
library(knitr)
?kable
kable(head(storms, n = 5))
knitr::kable(head(storms, n = 5))
install.packages("DT")
library(DT)
datatable(head(mtcars, n = nrow(mtcars)), options = list(pageLength = 5))
View(pew)
?pollutuion
?pollution
pollution %>%
rename(concentration = amount) %>%
head()
glimpse(cases) # TB cases from 3 countries
storms %>%
select(storm, wind)
storms %>%
filter(wind > 50)
storms %>%
select(storm, 1, 3)
storms %>%
select(storm, 1:3)
storms %>%
select(storm, 1:2)
storms %>%
select(storm, 1,2)
storms %>%
select(storm:wind)
sotmrs
storms
storms %>% select(storm, -pressure:date)
storms %>% select(storm, -c(pressure:date))
storms %>% select(storm, -pressure)
storms %>%
select(1:2)
storms %>% select(storm:wind)
storms %>%  select(storm, wind)
storms
storms %>% select(contains("s"))
storms %>% filter(storm == "Ana")
storms %>% filter(pressure >= 1000) # Wind speeds equal to or greater than 50 mph
storms %>% filter(pressure >= 1010) # Wind speeds equal to or greater than 50 mph
storms %>% filter(storm %in% x("Ana", "Alberto")
```
?storms
storms %>% mutate(ratio = pressure/wind)
storms %>%
mutate(ratio = pressure/wind) %>%
ggplot(aes(x = date, y = pressure) + geom_point()
```
storms %>%
mutate(ratio = pressure/wind) %>%
ggplot(aes(x = date, y = pressure)) + geom_point()
storms %>%
mutate(ratio = pressure/wind) %>%
ggplot(aes(x = date, y = pressure)) + geom_point() + theme_bw()
storms %>%
mutate(ratio = pressure/wind) %>%
ggplot(aes(x = date, y = pressure)) + geom_point(size = 3) + theme_bw()
storms %>%
mutate(ratio = pressure/wind) %>%
ggplot(aes(x = date, y = ratio)) + geom_point(size = 3) + theme_bw()
storms %>%
mutate(ratio = pressure/wind) %>%
ggplot(aes(x = date, y = ratio)) + geom_line(size = 3) + theme_bw()
storms %>%
mutate(ratio = pressure/wind) %>%     # Calculate the ratio of pressure to wind
ggplot(aes(x = date, y = ratio)) + theme_bw() +
geom_line(size = 3) + geom_point(size = 3, color = "cornflowerblue")#
storms %>%
mutate(ratio = pressure/wind) %>%     # Calculate the ratio of pressure to wind
ggplot(aes(x = date, y = ratio)) + theme_bw() +
geom_line(size = 1.5) + geom_point(size = 3, color = "cornflowerblue")#
storms %>%
mutate(ratio = pressure/wind) %>%     # Calculate the ratio of pressure to wind
ggplot(aes(x = date, y = ratio)) + theme_bw() +
geom_line(size = 1.5, color = "grey") + geom_point(size = 3, color = "cornflowerblue")#
?summarise
head(storms, n = 2)
storms %>%
summarise()
storms %>%
summarise(mean_wind = mean(wind),
median_pres = mean(pressure))
storms %>%
summarise(mean_wind = mean(wind),
median_pres = mean(pressure),
n = n())
storms %>%
summarise(mean_wind = mean(wind),
median_pres = mean(pressure),
n = n_distinct())
head(pollution)
pollution
pollution %>%
group_by(city)
pollution %>%
group_by(city) %>%
summarise(mean_particles = mean(amount))
songs
?songs
data
artists
artists2
left_join(songs, artists, by = "name")
citation(tidyr)
citation
?citation
citation(tidyr)
citation("tidyr")
write_bib(file = "bibliography.bib") # will write all packages
citation(package = "magrittr")
?cases
?tb
?gather
?spread
?gather
cases
pollution # particulate load from 3 cities
pollution # particulate load from 3 cities
setwd("~/git_repos/R_Meetup")
